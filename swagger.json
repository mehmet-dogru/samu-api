{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": "SAMU-API"
  },
  "servers": [
    {
      "url": "https://samu-api.fly.dev"
    }
  ],

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "lastName": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "string@string.com"
          },
          "password": {
            "type": "string",
            "example": "string"
          },
          "studentId": {
            "type": "string",
            "example": "191118000"
          },
          "department": {
            "type": "string",
            "example": "string"
          },
          "company": {
            "type": "string",
            "example": "string"
          }
        }
      }
    }
  },

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "users register in the system",
        "description": "Users register",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "string"
                  },
                  "password": {
                    "example": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "users login in the system",
        "description": "users login with password and email",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "string"
                  },
                  "password": {
                    "example": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": ["Post"],
        "description": "post are listed",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Post"],
        "description": "new post is added",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "string"
                  },
                  "content": {
                    "example": "string"
                  },
                  "imageUrl": {
                    "example": "string"
                  },
                  "createdAt": {
                    "example": "string"
                  },
                  "author": {
                    "example": "string"
                  },
                  "department": {
                    "example": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Product"],
        "description": "products are listed or can be filtered by queries.Queries not required",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Product"],
        "description": "product is added",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Product"],
        "description": "product detail is listed",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Product"],
        "description": "product is updated",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Product"],
        "description": "product is deleted",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Admin"],
        "description": "admin lists users or can filter by role filter",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/admin/users/{id}": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Admin"],
        "description": "admin is update user's role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "example": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Admin"],
        "description": "admin is delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/card/newItem": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Card"],
        "summary": "users add new item ",
        "description": "user adds product/products to cart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "products": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "productId": {
                          "type": "string",
                          "example": "string"
                        },
                        "amount": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Card"],
        "description": "user card is listed",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/card/clear": {
      "patch": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Card"],
        "summary": "users clear the card   ",
        "description": "the user can clear the card. User can delete a specific item",
        "parameters": [
          {
            "description": "productId to be deleted from the card",
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "user's orders are listed",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payType": {
                    "example": "string",
                    "type": "string"
                  },
                  "address": {
                    "example": "string",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
